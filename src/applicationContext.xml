<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
		
	
	
	<!-- 将Controller或DAO等组件扫描到Spring容器，替代了大量bean的定义 -->
	<context:component-scan base-package="com.controller" /><!-- 控制层 -->
	<context:component-scan base-package="com">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
	
	
	<!-- 定义@RequestMapping的支持 ,其实也支持接收表单参数等注解-->
	<mvc:annotation-driven/>
	
	
	<!-- 定义ViewResolver -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	
	<!-- 定义上传解析器，自动调用Commons-fileupload.jar -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>
	
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <property name="driverClass">
           <value>com.mysql.jdbc.Driver</value>
        </property>
        <property name="jdbcUrl">
			<value>jdbc:mysql://localhost:3306/empanel?useUnicode=true&amp;characterEncoding=UTF-8</value> 
        </property>
        <property name="user">
            <value>root</value>
        </property>
        <property name="password">
            <value>123456</value>
        </property>
        <property name="maxPoolSize">
            <value>80</value>
        </property>
        <property name="minPoolSize">
            <value>1</value>
        </property>
        <property name="initialPoolSize">
            <value>1</value>
        </property>
        <property name="maxIdleTime">
            <value>20</value>
        </property>
    </bean>
    
    
     <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
 		<property name="mappingLocations">
			<value>classpath*:com/pojo/**/*.hbm.xml</value>
   	 	</property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="show_sql">true</prop>
                <prop key="format_sql">true</prop>
                <prop key="hibernate.jdbc.batch_size">20</prop>
            </props>
        </property>
    </bean>


    <!-- 不破坏数据库,注册SessionFactory -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    
    
    <bean id="transactionInterceptor" 
 		class="org.springframework.transaction.interceptor.TransactionInterceptor"> 
         <property name="transactionManager" ref="transactionManager"></property> 
         <property name="transactionAttributes"> 
             <props> 
                 <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop> 
                 <prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop> 
                 <prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
                 
                 <prop key="update*">PROPAGATION_REQUIRED,-Exception</prop> 
                 <prop key="merge*">PROPAGATION_REQUIRED,-Exception</prop>
                 <prop key="execute*">PROPAGATION_REQUIRED,-Exception</prop>
                  
                 <prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
                 <prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>
 
                 <prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop> 
                 <prop key="query*">PROPAGATION_SUPPORTS,readOnly</prop> 
                 <prop key="get*">PROPAGATION_SUPPORTS,readOnly</prop> 
                 <prop key="load*">PROPAGATION_SUPPORTS,readOnly</prop> 
 				<prop key="*">PROPAGATION_SUPPORTS,readOnly</prop> 
             </props> 
         </property> 
     </bean> 
     
     
    <!-- 用来定义那些类需要采用事物管理 spring 事物的动态代理类 BeanNameAutoProxyCreator 根据类名自动代理，接受表达式 -->  
     <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator"> 
         <property name="beanNames"> 
        <!-- 下面是所有需要自动创建事务代理的bean-->
             <list> 
                 <value>*Service</value> 
             </list> 
         </property> 
        <!-- 下面定义BeanNameAutoProxyCreator所需的事务拦截器-->
        <property name="interceptorNames"> 
             <list> 
          <value>transactionInterceptor</value> 
             </list> 
         </property> 
     </bean>  
	
</beans>